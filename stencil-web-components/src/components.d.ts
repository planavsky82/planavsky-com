/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Navigation, NavigationItem, } from "@models/navigation";
export namespace Components {
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface PowerButton {
        "type": "button" | "submit" | "reset";
    }
    interface PowerLogin {
        "labelEmailAddress": string;
        "labelPassword": string;
    }
    interface PowerModal {
        "opened": boolean;
    }
    interface PowerNav {
        "data": Navigation;
        "route": string;
    }
    interface PowerPwaIndicator {
        "display": boolean;
        "image": string;
    }
    interface PowerReadMore {
    }
    interface PowerSignup {
        "labelEmailAddress": string;
        "labelPassword1": string;
        "labelPassword2": string;
    }
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLPowerButtonElement extends Components.PowerButton, HTMLStencilElement {
    }
    var HTMLPowerButtonElement: {
        prototype: HTMLPowerButtonElement;
        new (): HTMLPowerButtonElement;
    };
    interface HTMLPowerLoginElement extends Components.PowerLogin, HTMLStencilElement {
    }
    var HTMLPowerLoginElement: {
        prototype: HTMLPowerLoginElement;
        new (): HTMLPowerLoginElement;
    };
    interface HTMLPowerModalElement extends Components.PowerModal, HTMLStencilElement {
    }
    var HTMLPowerModalElement: {
        prototype: HTMLPowerModalElement;
        new (): HTMLPowerModalElement;
    };
    interface HTMLPowerNavElement extends Components.PowerNav, HTMLStencilElement {
    }
    var HTMLPowerNavElement: {
        prototype: HTMLPowerNavElement;
        new (): HTMLPowerNavElement;
    };
    interface HTMLPowerPwaIndicatorElement extends Components.PowerPwaIndicator, HTMLStencilElement {
    }
    var HTMLPowerPwaIndicatorElement: {
        prototype: HTMLPowerPwaIndicatorElement;
        new (): HTMLPowerPwaIndicatorElement;
    };
    interface HTMLPowerReadMoreElement extends Components.PowerReadMore, HTMLStencilElement {
    }
    var HTMLPowerReadMoreElement: {
        prototype: HTMLPowerReadMoreElement;
        new (): HTMLPowerReadMoreElement;
    };
    interface HTMLPowerSignupElement extends Components.PowerSignup, HTMLStencilElement {
    }
    var HTMLPowerSignupElement: {
        prototype: HTMLPowerSignupElement;
        new (): HTMLPowerSignupElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "power-button": HTMLPowerButtonElement;
        "power-login": HTMLPowerLoginElement;
        "power-modal": HTMLPowerModalElement;
        "power-nav": HTMLPowerNavElement;
        "power-pwa-indicator": HTMLPowerPwaIndicatorElement;
        "power-read-more": HTMLPowerReadMoreElement;
        "power-signup": HTMLPowerSignupElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface PowerButton {
        "type"?: "button" | "submit" | "reset";
    }
    interface PowerLogin {
        "labelEmailAddress"?: string;
        "labelPassword"?: string;
    }
    interface PowerModal {
        "onClosed"?: (event: CustomEvent<boolean>) => void;
        "opened"?: boolean;
    }
    interface PowerNav {
        "data"?: Navigation;
        "onSelectItem"?: (event: CustomEvent<NavigationItem>) => void;
        "route"?: string;
    }
    interface PowerPwaIndicator {
        "display"?: boolean;
        "image"?: string;
    }
    interface PowerReadMore {
    }
    interface PowerSignup {
        "labelEmailAddress"?: string;
        "labelPassword1"?: string;
        "labelPassword2"?: string;
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "power-button": PowerButton;
        "power-login": PowerLogin;
        "power-modal": PowerModal;
        "power-nav": PowerNav;
        "power-pwa-indicator": PowerPwaIndicator;
        "power-read-more": PowerReadMore;
        "power-signup": PowerSignup;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "power-button": LocalJSX.PowerButton & JSXBase.HTMLAttributes<HTMLPowerButtonElement>;
            "power-login": LocalJSX.PowerLogin & JSXBase.HTMLAttributes<HTMLPowerLoginElement>;
            "power-modal": LocalJSX.PowerModal & JSXBase.HTMLAttributes<HTMLPowerModalElement>;
            "power-nav": LocalJSX.PowerNav & JSXBase.HTMLAttributes<HTMLPowerNavElement>;
            "power-pwa-indicator": LocalJSX.PowerPwaIndicator & JSXBase.HTMLAttributes<HTMLPowerPwaIndicatorElement>;
            "power-read-more": LocalJSX.PowerReadMore & JSXBase.HTMLAttributes<HTMLPowerReadMoreElement>;
            "power-signup": LocalJSX.PowerSignup & JSXBase.HTMLAttributes<HTMLPowerSignupElement>;
        }
    }
}
